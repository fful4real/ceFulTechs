<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CeAccountType extends \App\Entity\CeAccountType implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'id', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'ceAccountTypeName', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'ceAccountTypeCode', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'datec', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'tms', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'fkCeAccountType'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'id', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'ceAccountTypeName', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'ceAccountTypeCode', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'datec', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'tms', '' . "\0" . 'App\\Entity\\CeAccountType' . "\0" . 'fkCeAccountType'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CeAccountType $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCeAccountTypeName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCeAccountTypeName', []);

        return parent::getCeAccountTypeName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCeAccountTypeName(string $ceAccountTypeName): \App\Entity\CeAccountType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCeAccountTypeName', [$ceAccountTypeName]);

        return parent::setCeAccountTypeName($ceAccountTypeName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCeAccountTypeCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCeAccountTypeCode', []);

        return parent::getCeAccountTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCeAccountTypeCode(string $ceAccountTypeCode): \App\Entity\CeAccountType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCeAccountTypeCode', [$ceAccountTypeCode]);

        return parent::setCeAccountTypeCode($ceAccountTypeCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatec(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatec', []);

        return parent::getDatec();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatec(\DateTimeInterface $datec): \App\Entity\CeAccountType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatec', [$datec]);

        return parent::setDatec($datec);
    }

    /**
     * {@inheritDoc}
     */
    public function getTms(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTms', []);

        return parent::getTms();
    }

    /**
     * {@inheritDoc}
     */
    public function setTms(\DateTimeInterface $tms): \App\Entity\CeAccountType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTms', [$tms]);

        return parent::setTms($tms);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkCeAccountType(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkCeAccountType', []);

        return parent::getFkCeAccountType();
    }

    /**
     * {@inheritDoc}
     */
    public function addFkCeAccountType(\App\Entity\CeAccount $fkCeAccountType): \App\Entity\CeAccountType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFkCeAccountType', [$fkCeAccountType]);

        return parent::addFkCeAccountType($fkCeAccountType);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFkCeAccountType(\App\Entity\CeAccount $fkCeAccountType): \App\Entity\CeAccountType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFkCeAccountType', [$fkCeAccountType]);

        return parent::removeFkCeAccountType($fkCeAccountType);
    }

}
